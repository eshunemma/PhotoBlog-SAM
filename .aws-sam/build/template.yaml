AWSTemplateFormatVersion: '2010-09-09'
Description: PhotoMe
Transform:
- AWS::Serverless-2016-10-31
Parameters:
  Environment:
    Type: String
    Default: pr
    AllowedValues:
    - pr
    - drr
    Description: Environment name for resource naming
Globals:
  Function:
    Environment:
      Variables:
        ENVIRONMENT:
          Ref: Environment
Conditions:
  IsPrimaryRegion:
    Fn::Equals:
    - Ref: AWS::Region
    - eu-west-1
Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName:
        Fn::Sub: PhotoMeUserPool-${Environment}
      UsernameAttributes:
      - email
      AutoVerifiedAttributes:
      - email
      Schema:
      - Name: email
        AttributeDataType: String
        Required: true
      - Name: name
        AttributeDataType: String
        Required: true
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: CognitoUserPool
      ClientName:
        Fn::Sub: PhotoMeAppClient-${Environment}
      GenerateSecret: true
      AllowedOAuthFlows:
      - implicit
      AllowedOAuthScopes:
      - email
      - openid
      - profile
      AllowedOAuthFlowsUserPoolClient: true
      CallbackURLs:
      - https://main.d1dz6uduz5w2pj.amplifyapp.com/dashboard
      LogoutURLs:
      - https://main.d1dz6uduz5w2pj.amplifyapp.com/signout
  CognitoIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName:
        Fn::Sub: PhotoMeIdentityPool-${Environment}
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
      - ProviderName:
          Fn::GetAtt:
          - CognitoUserPool
          - ProviderName
        ClientId:
          Ref: CognitoUserPoolClient
  PhotoBucketStaging:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: photome-bucket-amalitech-staging-${Environment}
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      ReplicationConfiguration:
        Fn::If:
        - IsPrimaryRegion
        - Role:
            Fn::GetAtt:
            - ReplicationRole
            - Arn
          Rules:
          - Status: Enabled
            Priority: 1
            DeleteMarkerReplication:
              Status: Enabled
            Destination:
              Bucket:
                Fn::Sub: arn:aws:s3:::photome-bucket-amalitech-staging-drr
            Filter:
              Prefix: ''
        - Ref: AWS::NoValue
  PhotoBucketProcessed:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: photome-bucket-amalitech-processed-${Environment}
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      ReplicationConfiguration:
        Fn::If:
        - IsPrimaryRegion
        - Role:
            Fn::GetAtt:
            - ReplicationRole
            - Arn
          Rules:
          - Status: Enabled
            Priority: 1
            DeleteMarkerReplication:
              Status: Enabled
            Destination:
              Bucket:
                Fn::Sub: arn:aws:s3:::photome-bucket-amalitech-processed-drr
            Filter:
              Prefix: ''
        - Ref: AWS::NoValue
  ReplicationRole:
    Type: AWS::IAM::Role
    Condition: IsPrimaryRegion
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: s3.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: S3ReplicationPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - s3:ReplicateObject
            - s3:ReplicateDelete
            - s3:GetObjectVersionForReplication
            Resource:
            - Fn::Sub: arn:aws:s3:::photome-bucket-amalitech-staging-pr/*
            - Fn::Sub: arn:aws:s3:::photome-bucket-amalitech-processed-pr/*
            - Fn::Sub: arn:aws:s3:::photome-bucket-amalitech-staging-drr/*
            - Fn::Sub: arn:aws:s3:::photome-bucket-amalitech-processed-drr/*
  PhotoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: photo-${Environment}
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
